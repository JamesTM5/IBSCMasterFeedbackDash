{
    "type": [
        2,
        2,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        3,
        3,
        3,
        3,
        2,
        2,
        3,
        3,
        3,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        3,
        2,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        2
    ],
    "data": [
        "\nR version 4.2.1 (2022-06-23 ucrt) -- \"Funny-Looking Kid\"\nCopyright (C) 2022 The R Foundation for Statistical Computing\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\n\nR is free software and comes with ABSOLUTELY NO WARRANTY.\nYou are welcome to redistribute it under certain conditions.\nType 'license()' or 'licence()' for distribution details.\n\nR is a collaborative project with many contributors.\nType 'contributors()' for more information and\n'citation()' on how to cite R or R packages in publications.\n\nType 'demo()' for some demos, 'help()' for on-line help, or\n'help.start()' for an HTML browser interface to help.\nType 'q()' to quit R.\n\n",
        "[Workspace loaded from ~/IBSCMasterFeedbackDash/.RData]\r\n\r\n",
        "Error in .rs.parsePackageDependencies(contents, extension) : \n  object 'partition_yaml_front_matter' not found\n",
        "> ",
        "compileMasterDash <- function(templateDirectoryName,",
        "+ ",
        "                              dataDirectoryName,",
        "+ ",
        "                              outputDirectory,",
        "+ ",
        "                              outputFilename,",
        "+ ",
        "                              runForChecking = TRUE) {",
        "+ ",
        "  ",
        "+ ",
        "  packages = c(\"rmarkdown\", \"tidyverse\")",
        "+ ",
        "  ",
        "+ ",
        "  invisible(lapply(packages, library, character.only = TRUE))",
        "+ ",
        "  ",
        "+ ",
        "#Input Code",
        "+ ",
        "  #read in all template text files",
        "+ ",
        "  files = list.files(path = paste(\".\", templateDirectoryName, sep = \"/\"), pattern = '.txt$')",
        "+ ",
        "  templateList <- list()",
        "+ ",
        "  for (i in 1:length(files)) {",
        "+ ",
        "    file <- read_file(paste(templateDirectoryName, files[i], sep = \"/\"))",
        "+ ",
        "    name <- as.character(files[i])",
        "+ ",
        "    templateList[[name]] <- file",
        "+ ",
        "  }",
        "+ ",
        "",
        "+ ",
        "#make an output directory",
        "+ ",
        "  if(!dir.exists(outputDirectory)){",
        "+ ",
        "    dir.create(outputDirectory)",
        "+ ",
        "  }",
        "+ ",
        "#move survey data files to a subdirectory of the output directory",
        "+ ",
        "  if(!dir.exists(path = paste(outputDirectory, \"data\", sep = \"/\"))) {",
        "+ ",
        "    dir.create(path = paste(outputDirectory, \"data\", sep = \"/\"))",
        "+ ",
        "  }",
        "+ ",
        "  ogDataFolder <- paste(getwd(), dataDirectoryName, sep = \"/\")",
        "+ ",
        "  listOfFilesRDS <- list.files(ogDataFolder, pattern = '^.*rds$')",
        "+ ",
        "  file.copy(file.path(ogDataFolder,listOfFilesRDS), paste(outputDirectory, \"data\", sep = \"/\"))",
        "+ ",
        "  listOfFilesJSON <- list.files(ogDataFolder, pattern = '^.*json$')",
        "+ ",
        "  file.copy(file.path(ogDataFolder,listOfFilesJSON), paste(outputDirectory, \"data\", sep = \"/\"))",
        "+ ",
        "",
        "+ ",
        "  #copy assets folder and all contents to output directory  ",
        "+ ",
        "  if(!dir.exists(path = paste(outputDirectory, \"assets\", sep = \"/\"))){",
        "+ ",
        "    file.copy(\"./assets\",outputDirectory,recursive=TRUE)",
        "+ ",
        "  }",
        "+ ",
        "#read in data to figure out page/section requirements for the dash. ",
        "+ ",
        "  fileList <- list()",
        "+ ",
        "  for (i in 1:length(listOfFilesRDS)) {",
        "+ ",
        "    file <- readRDS(paste(ogDataFolder, listOfFilesRDS[i], sep = \"/\"))",
        "+ ",
        "    name <- as.character(listOfFilesRDS[i])",
        "+ ",
        "    fileList[[name]] <- file",
        "+ ",
        "  }",
        "+ ",
        "#count number of RQs",
        "+ ",
        "  numRQ <- vector()",
        "+ ",
        "  for(i in 1:length(fileList)){",
        "+ ",
        "    numRQ[i] <- length(fileList[[1]]$totalNetworkInfo)",
        "+ ",
        "  }",
        "+ ",
        "  if(length(numRQ) >= 2) {  ",
        "+ ",
        "    if(var(numRQ) > 0) {",
        "+ ",
        "      warning(\"number of relationship questions not consistent across all datasets\")",
        "+ ",
        "    }",
        "+ ",
        "    numRQ <- numRQ[1]",
        "+ ",
        "    #factor in presence of overview page",
        "+ ",
        "    if(numRQ == 1) {",
        "+ ",
        "      numRQ <- 1",
        "+ ",
        "    } else {",
        "+ ",
        "      numRQ <- numRQ - 1",
        "+ ",
        "    }",
        "+ ",
        "  }",
        "+ ",
        "  ",
        "+ ",
        "#Check for additional measures questions",
        "+ ",
        "  #if nodes contains the right columns, belongingness = present",
        "+ ",
        "  belongingnessText <- c(",
        "+ ",
        "    \"I feel like I belong at\",",
        "+ ",
        "    \"I make friends easily at\",",
        "+ ",
        "    \" seem to like me\",",
        "+ ",
        "    \"I feel awkward and out of place\",",
        "+ ",
        "    \"I feel like an outsider\",",
        "+ ",
        "    \"I feel lonely at\"",
        "+ ",
        "  )",
        "+ ",
        "  belongingnessIndices <- vector()",
        "+ ",
        "  for(i in 1:length(belongingnessText)){",
        "+ ",
        "    belongingnessIndices[[length(belongingnessIndices)+1]] <- grep(belongingnessText[i], colnames(fileList[[1]]$nodes))",
        "+ ",
        "  }  ",
        "+ ",
        "  if(length(belongingnessIndices)>6) {",
        "+ ",
        "    warning(\"more belongingness question columns have been matched than there should be.\")",
        "+ ",
        "    belongingnessPresent <- TRUE",
        "+ ",
        "  } else if (length(belongingnessIndices) == 6) {",
        "+ ",
        "    belongingnessPresent <- TRUE",
        "+ ",
        "  } else if (length(belongingnessIndices) > 0) {",
        "+ ",
        "    warning(\"fewer belongingness question columns have been matched than there should be.  Check the belongingness pages for errors\")",
        "+ ",
        "    belongingnessPresent <- TRUE",
        "+ ",
        "  } else {",
        "+ ",
        "    belongingnessPresent <- FALSE",
        "+ ",
        "  }",
        "+ ",
        "",
        "+ ",
        "#Template Modification  ",
        "+ ",
        "#add a YAML header suitable for the dashboard",
        "+ ",
        "  setupYaml <- function (template = templateList$YAML.txt, title = \"RF Dashboard\") {",
        "+ ",
        "    titlePlaceholder <- \"titleOfDashboard\"",
        "+ ",
        "    template <- str_replace_all(template, titlePlaceholder, title)",
        "+ ",
        "  }",
        "+ ",
        "",
        "+ ",
        "#add a setup code chunk to call libraries, read in .RDS data and set.seed()",
        "+ ",
        "  setupSetupChunk <- function (setupChunkTemplate = templateList$setupChunk.txt) {",
        "+ ",
        "    setupChunkTemplate",
        "+ ",
        "  }",
        "+ ",
        "  ",
        "+ ",
        "#add a page for a single RQ with no expectation of a class overview.",
        "+ ",
        "  setupRQPageSingle <- function(template = templateList$RQPageSingle.txt,",
        "+ ",
        "                                fileListNumber = 1,",
        "+ ",
        "                                RQText = \"How closely do you relate to this person?\",",
        "+ ",
        "                                RQSummary = \"Relatedness\",",
        "+ ",
        "                                ...){",
        "+ ",
        "",
        "+ ",
        "    className <- fileList[[fileListNumber]]$className",
        "+ ",
        "    template <- str_replace_all(template, \"classNamePlaceholderhonrwufzql\", className)",
        "+ ",
        "    template <- str_replace_all(template, \"fileListNumberPlaceholderrmwkpgtffs\", as.character(fileListNumber))",
        "+ ",
        "    template <- str_replace_all(template, \"RQTextPlaceholdersqqpizconj\", RQText)",
        "+ ",
        "    template <- str_replace_all(template, \"RQSummaryPlaceholderxbvmgayrkd\", RQSummary)",
        "+ ",
        "    dash[[length(dash)+1]] <- template",
        "+ ",
        "  }",
        "+ ",
        "  ",
        "+ ",
        "  setupRQPageMultiple <- function(template = templateList$RQPageMulti.txt,",
        "+ ",
        "                                  fileListNumber,",
        "+ ",
        "                                  questionNumber,",
        "+ ",
        "                                  RQTextList = c(\"Relationships Question 1\",",
        "+ ",
        "                                                 \"Relationships Question 2\",",
        "+ ",
        "                                                 \"Relationships Question 3\",",
        "+ ",
        "                                                 \"Relationships Question 4\"",
        "+ ",
        "                                                 ),",
        "+ ",
        "                                  RQSummaryList = c(\"RQ1\",",
        "+ ",
        "                                                    \"RQ2\",",
        "+ ",
        "                                                    \"RQ3\",",
        "+ ",
        "                                                    \"RQ4\"",
        "+ ",
        "                                                    ),",
        "+ ",
        "                                  ...){",
        "+ ",
        "",
        "+ ",
        "    className <- fileList[[fileListNumber]]$className",
        "+ ",
        "    template <- str_replace_all(template, \"classNamePlaceholderhonrwufzql\", className)",
        "+ ",
        "    template <- str_replace_all(template, \"fileListNumberPlaceholderrmwkpgtffs\", as.character(fileListNumber))",
        "+ ",
        "    template <- str_replace_all(template, \"RQTextPlaceholdersqqpizconj\", RQTextList[[questionNumber]])",
        "+ ",
        "    template <- str_replace_all(template, \"RQSummaryPlaceholderxbvmgayrkd\", RQSummaryList[[questionNumber]])",
        "+ ",
        "    template <- str_replace_all(template, \"RQNumberPlaceholderjkkfdufsse\", as.character(questionNumber))",
        "+ ",
        "    dash[[length(dash)+1]] <- template",
        "+ ",
        "  }",
        "+ ",
        "",
        "+ ",
        "  addToSetupChunk <- function (textToAdd, setupChunk = dash[[2]]) {",
        "+ ",
        "    placeholder <- \"'dupnlmffjcatgle'\"",
        "+ ",
        "    setupChunk <- str_replace_all(setupChunk,",
        "+ ",
        "                                  placeholder,",
        "+ ",
        "                                  paste(textToAdd,",
        "+ ",
        "                                        placeholder,",
        "+ ",
        "                                        sep = \"\\n\"))",
        "+ ",
        "  }",
        "+ ",
        "",
        "+ ",
        "#pull together packages to properly call them in the setup chunk",
        "+ ",
        "  addPackages <- function (setupChunk = dash[[2]], packages = packagesUsed) {",
        "+ ",
        "    #make a string of package names",
        "+ ",
        "    packages <- unlist(unique(packages))",
        "+ ",
        "    packages <- lapply(packages, function(x){paste0(\"'\", x, \"'\")})",
        "+ ",
        "    packages <- paste(packages, sep = '', collapse = \", \")",
        "+ ",
        "    setupChunk <- str_replace_all(setupChunk, \"packageListPlaceholder\", packages)",
        "+ ",
        "  }",
        "+ ",
        "",
        "+ ",
        "  dash <- list()",
        "+ ",
        "  packagesUsed <- list()",
        "+ ",
        "",
        "+ ",
        "#build dash page list  ",
        "+ ",
        "  dash[[1]] <- setupYaml(title = \"IBSC Dash\")",
        "+ ",
        "  dash[[2]] <- setupSetupChunk()",
        "+ ",
        "#add school-wide pages if needed",
        "+ ",
        "  # if(length(fileList) >= 2) {",
        "+ ",
        "  #   dash[[length(dash)+1]] <- setupSchoolOverviewPage(fileList)",
        "+ ",
        "  #    if(belongingnessPresent == TRUE) {",
        "+ ",
        "  #       dash[[length(dash)+1]] <- setupOverallBelongingnessPage(fileList)",
        "+ ",
        "  #   }",
        "+ ",
        "  # }",
        "+ ",
        "#add class pages for each class",
        "+ ",
        "",
        "+ ",
        "   for(i in 1:length(fileList)) {",
        "+ ",
        "    if(numRQ == 1) {",
        "+ ",
        "       dash[[length(dash)+1]] <- setupRQPageSingle(fileListNumber = i)",
        "+ ",
        "       dash[[2]] <- addToSetupChunk(textToAdd = \"d3RQPrepSingleInstance\\\\(fileList\\\\=fileList\\\\)\")",
        "+ ",
        "  #     dash[[length(dash)+1]] <- setupIndividualScores(fileList[[i]])",
        "+ ",
        "     } else if(numRQ >= 2) {",
        "+ ",
        "  #     dash[[length(dash)+1]] <- setupRQClassOverviewPage(fileList[[i]])",
        "+ ",
        "       for (j in 1:(numRQ-1)) {",
        "+ ",
        "         dash[[length(dash)+j]] <- setupRQPageMultiple(fileListNumber = i, questionNumber = j)",
        "+ ",
        "       }",
        "+ ",
        "       dash[[2]] <- addToSetupChunk(textToAdd = \"d3RQPrepSingleInstance\\\\(fileList\\\\=fileList\\\\)\")",
        "+ ",
        "  #     dash[[length(dash)+1]] <- setupIndividualScores(fileList[[i]])",
        "+ ",
        "  #   }",
        "+ ",
        "  #   if(belongingnessPresent == TRUE) {",
        "+ ",
        "  #     dash[[length(dash)+1]] <- setupBelongingnessPage(fileList[[i]])",
        "+ ",
        "    }",
        "+ ",
        "   }",
        "+ ",
        "  # dash[[length(dash)+1]] <- setupRawData(fileList)",
        "+ ",
        "  ",
        "+ ",
        "  #delete setup key string to keep output code clean",
        "+ ",
        "  ",
        "+ ",
        "#insert package list into setup chunk to call relevant libraries",
        "+ ",
        "  packagesUsed <- append(packagesUsed, c(\"rmarkdown\", \"jsonlite\", \"tidyverse\", \"flexdashboard\"))",
        "+ ",
        "  dash[[2]] <- addPackages(setupChunk = dash[[2]], packages = packagesUsed)",
        "+ ",
        "",
        "+ ",
        "#Output Code",
        "+ ",
        "  #define where the .RMD file will be located when it is generated",
        "+ ",
        "  outputFilePath <- paste(outputDirectory, \"/\", outputFilename, \".RMD\", sep = \"\")",
        "+ ",
        "  ",
        "+ ",
        "  #Write out the file to a .RMD document",
        "+ ",
        "  fileConn <- file(outputFilePath)",
        "+ ",
        "  writeLines(unlist(dash), fileConn)",
        "+ ",
        "  close(fileConn)",
        "+ ",
        "  ",
        "+ ",
        "  #Run the .RMD for quality assurance purposes",
        "+ ",
        "  if(runForChecking == TRUE) {",
        "+ ",
        "    rmarkdown::run(outputFilePath)",
        "+ ",
        "  }",
        "+ ",
        "",
        "+ ",
        "}",
        "> ",
        "compileMasterDash(templateDirectoryName = 'RMDTemplate',",
        "+ ",
        "                  dataDirectoryName = 'test data',",
        "+ ",
        "                  outputFilename = 'masterDashCompiled',",
        "+ ",
        "                  outputDirectory = 'compilationOutput')",
        "── \u001B[1mAttaching packages\u001B[22m ──────────────────────────────────────────────────── tidyverse 1.3.2 ──\n\u001B[32m✔\u001B[39m \u001B[34mggplot2\u001B[39m 3.3.6     \u001B[32m✔\u001B[39m \u001B[34mpurrr  \u001B[39m 0.3.4\n\u001B[32m✔\u001B[39m \u001B[34mtibble \u001B[39m 3.1.7     \u001B[32m✔\u001B[39m \u001B[34mdplyr  \u001B[39m 1.0.9\n\u001B[32m✔\u001B[39m \u001B[34mtidyr  \u001B[39m 1.2.0     \u001B[32m✔\u001B[39m \u001B[34mstringr\u001B[39m 1.4.0\n\u001B[32m✔\u001B[39m \u001B[34mreadr  \u001B[39m 2.1.2     \u001B[32m✔\u001B[39m \u001B[34mforcats\u001B[39m 0.5.1\n",
        "── \u001B[1mConflicts\u001B[22m ─────────────────────────────────────────────────────── tidyverse_conflicts() ──\n\u001B[31m✖\u001B[39m \u001B[34mdplyr\u001B[39m::\u001B[32mfilter()\u001B[39m masks \u001B[34mstats\u001B[39m::filter()\n\u001B[31m✖\u001B[39m \u001B[34mdplyr\u001B[39m::\u001B[32mlag()\u001B[39m    masks \u001B[34mstats\u001B[39m::lag()\n",
        "Loading required package: shiny\n",
        "\nListening on http://127.0.0.1:7374\n",
        "\f\n",
        "\n\nprocessing file: masterDashCompiled.RMD\n",
        "\r  |                                                                                         \r  |                                                                                   |   0%\r  |                                                                                         \r  |.                                                                                  |   1%\n  ordinary text without R code\n\n\r  |                                                                                         \r  |.                                                                                  |   2%",
        "\nlabel: setup (with options) \nList of 1\n $ include: logi FALSE\n\n",
        "\nAttaching package: 'jsonlite'\n\n",
        "The following object is masked from 'package:shiny':\n\n    validate\n\n",
        "The following object is masked from 'package:purrr':\n\n    flatten\n\n",
        "\r  |                                                                                         \r  |..                                                                                 |   3%\n  ordinary text without R code\n\n\r  |                                                                                         \r  |...                                                                                |   4%\nlabel: unnamed-chunk-1\n\r  |                                                                                         ",
        "\r  |....                                                                               |   5%\n  ordinary text without R code\n\n\nlabel: unnamed-chunk-2\n\r  |                                                                                         \r  |.....                                                                              |   6%\n  ordinary text without R code\n\n\r  |                                                                                         \r  |......                                                                             |   7%",
        "\nlabel: unnamed-chunk-3\n\r  |                                                                                         \r  |.......                                                                            |   8%\n  ordinary text without R code\n\n\r  |                                                                                         \r  |.......                                                                            |   9%\nlabel: unnamed-chunk-4\n\r  |                                                                                         ",
        "\r  |........                                                                           |  10%\n   inline R code fragments\n\n\r  |                                                                                         \r  |.........                                                                          |  11%\nlabel: unnamed-chunk-5 (with options) \nList of 1\n $ results: chr \"asis\"\n\n\r  |                                                                                         \r  |..........                                                                         |  12%",
        "\n  ordinary text without R code\n\n\r  |                                                                                         \r  |..........                                                                         |  13%\nlabel: unnamed-chunk-6 (with options) \nList of 1\n $ results: chr \"asis\"\n\n\r  |                                                                                         \r  |...........                                                                        |  14%\n  ordinary text without R code\n\n",
        "\r  |                                                                                         \r  |............                                                                       |  14%\nlabel: unnamed-chunk-7 (with options) \nList of 1\n $ results: chr \"asis\"\n\n\r  |                                                                                         \r  |.............                                                                      |  15%\n  ordinary text without R code\n\n\r  |                                                                                         ",
        "\r  |.............                                                                      |  16%\nlabel: unnamed-chunk-8\n\r  |                                                                                         \r  |..............                                                                     |  17%\n   inline R code fragments\n\n\r  |                                                                                         \r  |...............                                                                    |  18%",
        "\nlabel: unnamed-chunk-9\n\r  |                                                                                         \r  |................                                                                   |  19%\n   inline R code fragments\n\n\r  |                                                                                         \r  |................                                                                   |  20%\nlabel: unnamed-chunk-10\n\r  |                                                                                         ",
        "\r  |.................                                                                  |  21%\n   inline R code fragments\n\n\r  |                                                                                         \r  |..................                                                                 |  22%\nlabel: unnamed-chunk-11\n\r  |                                                                                         \r  |...................                                                                |  23%",
        "\n  ordinary text without R code\n\n\nlabel: unnamed-chunk-12\n",
        "Quitting from lines 236-240 (masterDashCompiled.RMD) \n",
        "\n",
        "Warning:",
        " Error in repeatedforcedirectedOutput: could not find function \"repeatedforcedirectedOutput\"\n",
        "  142: \u001B[37meval\u001B[39m\n",
        "",
        "  141: \u001B[37meval\u001B[39m\n",
        "",
        "  140: \u001B[37meval_with_user_handlers\u001B[39m\n",
        "",
        "  135: \u001B[37mevaluate_call\u001B[39m\n",
        "",
        "  134: \u001B[37mevaluate::evaluate\u001B[39m\n",
        "",
        "  133: \u001B[37mevaluate\u001B[39m\n",
        "",
        "  130: \u001B[37meng_r\u001B[39m\n",
        "",
        "  129: \u001B[37mblock_exec\u001B[39m\n",
        "",
        "  128: \u001B[37mcall_block\u001B[39m\n",
        "",
        "  127: \u001B[37mprocess_group.block\u001B[39m\n",
        "",
        "  124: \u001B[37mprocess_file\u001B[39m\n",
        "",
        "  123: \u001B[37mknitr::knit\u001B[39m\n",
        "",
        "  122: \u001B[37m<Anonymous>\u001B[39m\n",
        "",
        "  117: \u001B[37m<reactive>\u001B[39m\n",
        "",
        "  101: \u001B[37mdoc\u001B[39m\n",
        "",
        "  100: \u001B[37mrenderUI\u001B[39m\n",
        "",
        "   99: \u001B[37mfunc\u001B[39m\n",
        "",
        "   86: \u001B[37mrenderFunc\u001B[39m\n",
        "",
        "   85: \u001B[37moutput$__reactivedoc__\u001B[39m\n",
        "",
        "    4: \u001B[37m<Anonymous>\u001B[39m\n",
        "",
        "    2: \u001B[37mrmarkdown::run\u001B[39m\n",
        "",
        "    1: \u001B[34m\u001B[1mcompileMasterDash [#210]\u001B[22m\u001B[39m\n",
        "\n",
        "\nRestarting R session...\n\n"
    ]
}