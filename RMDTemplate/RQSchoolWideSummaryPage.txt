
School Overview {data-orientation=rows}
=======================================================================

Input {.sidebar}
--------------------------------------------------------

```{R}
#build summary data frame
summaryDataFrame <- data.frame()
summaryDataFrameColumnNames <- c("Class Name", "Health", "Reciprocity",
                                 "PfI", "Diameter",
                                 "Density", "Isolates")
for (k in summaryDataFrameColumnNames) {
  summaryDataFrame[[k]] <- as.character()
} 
for (i in 1:length(fileList)) {
  file <- fileList[i]
  summary <- list(file[[1]]$className,
                        file[[1]]$overallScoresList[[length(file[[1]]$overallScoresList)]][[1]],
                        file[[1]]$totalNetworkInfo[[length(file[[1]]$totalNetworkInfo)]][[6]], 
                        file[[1]]$overallScoresList[[length(file[[1]]$overallScoresList)]][[2]], 
                        file[[1]]$totalNetworkInfo[[length(file[[1]]$totalNetworkInfo)]][[4]],
                        file[[1]]$totalNetworkInfo[[length(file[[1]]$totalNetworkInfo)]][[5]], 
                        as.numeric(length(file[[1]]$isolatesSSNQFormatted)))
  summaryDataFrame[i,] <- summary
}

for(i in 2:ncol(summaryDataFrame)){
summaryDataFrame[,i] <- round(as.numeric(summaryDataFrame[,i]), digits = 1)
}

#add an arbitrary score for the x axis of summary graphs
summaryDataFrame$Score <- "A"

classChoices <- summaryDataFrame$'Class Name'

#function to determine scale of whisker plots
scaleFUN <- function(x) sprintf("%.2f", x)

#add colours to cases for the whisker plots
summaryDataFrame$color <- ColourPicker(nrow(summaryDataFrame))

```

```{R}
div(style = "margin-top: 1.5vh;")

#create input UI for the whisker plots
selectInput(
  inputId = "Set",
  label = "Class",
  choices = classChoices,
  multiple = T
)

```


This page is an overview of the class data that the Relationships Foundation have collated and analyzed.  Across the top there are overall measures of peer-to-peer relational health and potential for improvement.  This is an aggregate measure which factors in a range of different measures that our work has identified as potentially relevant.  You can use the class relational health as a summary finding for each class.  To highlight a class, choose one or more from the drop-down menu above this text.

The array of dots to the right represent each of the learners who completed our surveys with you.

**To access the menu, select the window, so that a green border appears, and press the Arrow Up key on your keyboard.**

**To pause the movement of the learners on the page, press the Arrow Down key on your keyboard.**

In this early version of the simulation, to access all the features, please chose an option from the ‘Color’ drop-down menu and select the second option on the list such that the learners change color.  Then select ‘Grid’ from the ‘Layout’ drop-down menu.  This will trigger full functionality to be available to you.


Summary Data {data-height=350}
--------------------------------------------------------

### Class Relational Health

```{r}

output$NetworkHealth <- renderPlot({
  ggplot(summaryDataFrame, aes(x=Score, y=Health)) +
  scale_x_discrete() +
  scale_y_continuous(labels=scaleFUN, limits=c(40,150)) +
  geom_rect(data = summaryDataFrame, aes(),
                                        xmin = -Inf,
                                        xmax = Inf,
                                        ymin = 0,
                                        ymax = 60,
                                        fill = "#AD8A56",
                                        alpha = 0.1) +
  geom_rect(data = summaryDataFrame, aes(),
                                        xmin = -Inf,
                                        xmax = Inf,
                                        ymin = 61,
                                        ymax = 90,
                                        fill = "#D7D7D7",
                                        alpha = 0.1) +
  geom_rect(data = summaryDataFrame, aes(),
                                        xmin = -Inf,
                                        xmax = Inf,
                                        ymin = 91,
                                        ymax = 150,
                                        fill = "#F8E114",
                                        alpha = 0.1) +
  geom_boxplot(width = 0.25, fill="grey", color="darkslategrey", size = 1) +
  geom_dotplot(binaxis='y', stackdir='center', dotsize=60, binwidth = 1/30) +
  geom_point(
    data=subset(summaryDataFrame, summaryDataFrame[[1]] %in% input$Set),
    aes(x=Score, y=Health), 
    size=5, color=
      subset(summaryDataFrame, summaryDataFrame[[1]] %in% input$Set)$color,
      alpha = 0.7) +
  labs(x="", y="") +
   theme(axis.title.x=element_blank(),
        axis.text.x=element_blank(),
        axis.ticks.x=element_blank(),
        plot.title = element_text(hjust = 0.5))

})

plotOutput("NetworkHealth")
```

> This 'Box and Whisker' plot indicates the overall score assigned to each class for their peer-to-peer relational health.  It is an amalgamation of many factors, for example the density of the positive relationships reported across each relationship question and the amount of agreement learners reported.

### Potential for Improvement


```{r}

output$PfIPlot <- renderPlot({
  ggplot(summaryDataFrame, aes(x=Score, y=PfI)) +
  scale_x_discrete() +
  scale_y_continuous(labels=scaleFUN, limits= c(40, 150)) +
  geom_rect(data = summaryDataFrame, aes(),
                                        xmin = -Inf,
                                        xmax = Inf,
                                        ymin = 0,
                                        ymax = 60,
                                        fill = "#AD8A56",
                                        alpha = 0.1) +
  geom_rect(data = summaryDataFrame, aes(),
                                        xmin = -Inf,
                                        xmax = Inf,
                                        ymin = 61,
                                        ymax = 90,
                                        fill = "#D7D7D7",
                                        alpha = 0.1) +
  geom_rect(data = summaryDataFrame, aes(),
                                        xmin = -Inf,
                                        xmax = Inf,
                                        ymin = 91,
                                        ymax = 150,
                                        fill = "#F8E114",
                                        alpha = 0.1) +
  geom_boxplot(width = 0.25, fill="grey", color="darkslategrey", size = 1) +
  geom_dotplot(binaxis='y', stackdir='center', dotsize=60, binwidth = 1/30) +
  geom_point(
    data=subset(summaryDataFrame, summaryDataFrame[[1]] %in% input$Set),
    aes(x=Score, y=PfI), 
    size=5, color=
      subset(summaryDataFrame, summaryDataFrame[[1]] %in% input$Set)$color,
      alpha = 0.7) +
  labs(x="", y="") +
   theme(axis.title.x=element_blank(),
        axis.text.x=element_blank(),
        axis.ticks.x=element_blank(),
        plot.title = element_text(hjust = 0.5))
})

plotOutput("PfIPlot")
```

> This plot identifies the potential for improving the peer to peer relationships in a classroom.  Many factors that inform this score, including learners' 'relational overhead', (their capacity to form or strengthen relationships in class), and cohesiveness (any existing structure of cliques which could hamper development of relationships).

### Reciprocity

```{r}
output$ReciprocityPlot <- renderPlot({
  ggplot(summaryDataFrame, aes(x=Score, y=Reciprocity)) +
  scale_x_discrete() +
  scale_y_continuous(labels=scaleFUN, limits=c(0,1)) +
  geom_boxplot(width = 0.25, fill="grey", color="darkslategrey", size = 1) +
  geom_dotplot(binaxis='y', stackdir='center', dotsize=0.6, binwidth = 1/30) +
  geom_point(
    data=subset(summaryDataFrame, summaryDataFrame[[1]] %in% input$Set),
    aes(x=Score, y=Reciprocity),
    size=5, color=
      subset(summaryDataFrame, summaryDataFrame[[1]] %in% input$Set)$color,
      alpha = 0.7) +
  labs(x="", y="") +
  theme(axis.title.x=element_blank(),
        axis.text.x=element_blank(),
        axis.ticks.x=element_blank(),
        plot.title = element_text(hjust = 0.5))
})

plotOutput("ReciprocityPlot")
```

> The reciprocity in a classroom is a measure of the agreement between students about each relationship they were asked to assess.

### Diameter

```{r}
output$DiameterPlot <- renderPlot({
  ggplot(summaryDataFrame, aes(x=Score, y=Diameter)) +
  scale_x_discrete() +
  scale_y_reverse(labels=scaleFUN, limits = c(10,0)) +
  geom_boxplot(width = 0.25, fill="grey", color="darkslategrey", size = 1) +
  geom_dotplot(binaxis='y', stackdir='center', dotsize=0.6, binwidth = 1/3) +
  geom_point(
    data=subset(summaryDataFrame, summaryDataFrame[[1]] %in% input$Set),
    aes(x=Score, y=Diameter), 
    size=5, color=
      subset(summaryDataFrame, summaryDataFrame[[1]] %in% input$Set)$color,
      alpha = 0.7) +
  labs(x="", y="") +
   theme(axis.title.x=element_blank(),
        axis.text.x=element_blank(),
        axis.ticks.x=element_blank(),
        plot.title = element_text(hjust = 0.5))
})

plotOutput("DiameterPlot")
```

> The diameter of a relational landscape is a measure of how interconnected it is: If one put three students in a group, how likely would it be to and have them contain positive preexisting relationships which would allow others to be forged?

### Edge Density

```{r}
output$DensityPlot <- renderPlot({
  ggplot(summaryDataFrame, aes(x=Score, y=Density)) +
  scale_y_continuous(labels=scaleFUN, limits=c(0,1)) +
  scale_x_discrete() +
  geom_boxplot(width = 0.25, fill="grey", color="darkslategrey", size = 1) +
  geom_dotplot(binaxis='y', stackdir='center', dotsize=0.6, binwidth = 1/30) +
  geom_point(
    data=subset(summaryDataFrame, summaryDataFrame[[1]] %in% input$Set),
    aes(x=Score, y=Density), 
    size=5, color=
      subset(summaryDataFrame, summaryDataFrame[[1]] %in% input$Set)$color,
      alpha = 0.7) +
  labs(x="", y="") +
   theme(axis.title.x=element_blank(),
        axis.text.x=element_blank(),
        axis.ticks.x=element_blank(),
        plot.title = element_text(hjust = 0.5))
})

plotOutput("DensityPlot")
```

> Edge Density is the overall volume of strongly positive relationships compared with the maximum potential number of relationships


dataCol {data-height=900}
--------------------------------------------------------------------------------

### Learner Summary Graphing Tool

```{r}

parliamentOutput("parliament1")
output$parliament1 <- renderParliament(parliament("Hello", nodesAmalgam))

```

>The Learner Summary Graphing Tool is a portal to questioning the body of student data as a whole.  The 'Parliament', 'Grid' and 'Pie chart' Layouts provides a sense of proportion, for instance the proporiton of students who completed the surveys.  The 'Bar Chart' layout offers a sense of counts in categorical data, such as how many students had high or low belogningness scores, or How the student population varies by which sport they play.  The 'Scatter' layout allows for two categorical or scalar variables to be compared, such as Relationship scores between students and teachers as assessed by the students, vs. those as assessed by the teachers.  On top of this, you may filter a variable, for example removing those who did not finish answering all the questions asked, and you may colour learners' dots by another factor to explore how that factor is shaped by those informing the layout. 'Up Arrow' shows and hides the drop-down menu, and 'Down Arrow' pauses the simulation.
